I"ƒ<p>This tutorial will show how to integrate OAuth2 with Spring Security in a Spring Boot application.</p>

<p>The Spring Boot application I am going to use is based on my previous article: <a href="https://codersite.dev/documenting-rest-api-openapi3/">Documenting a SpringBoot REST API with OpenAPI 3</a></p>

<h3 id="oauth">OAuth</h3>

<p><a href="https://datatracker.ietf.org/doc/html/rfc6749">OAuth</a> is an authorization framework many companies use to secure access to its protected resources. It performs this by using access tokens.</p>

<p>The token represents a delegated right of access on behalf of the resource owner.</p>

<h3 id="roles">Roles</h3>

<p>OAuth defines four roles</p>

<ul>
  <li>
    <p>Resource Owner â€“ the user who grants access to a protected resource.</p>
  </li>
  <li>
    <p>Resource Server â€“ store userâ€™s data and http services and respond to protected resource requests using access tokens.</p>
  </li>
  <li>
    <p>Client â€“ the application which require access to protected resources on behalf of the resource owner and with its authorization.</p>
  </li>
  <li>
    <p>Authorization Server â€“ responsible for authenticating userâ€™s identity and gives an authorization token.</p>
  </li>
</ul>

<h3 id="authorization-grant">Authorization grant</h3>

<p>An authorization grant is a credential representing the resource ownerâ€™s authorization used by the client to obtain an access token.</p>

<p>OAuth defines four grant types.</p>

<ul>
  <li>
    <p>Authorization Code, for web apps that are server-side apps</p>
  </li>
  <li>
    <p>Implicit, optimized for clients implemented in a browser using a scripting language such as JavaScript</p>
  </li>
  <li>
    <p>Resource Owner Password Credentials, used when there is a high degree of trust between the resource owner and the client</p>
  </li>
  <li>
    <p>Client Credentials, used when the client is requesting access to protected resources based on an authorization previously arranged with the authorization server.</p>
  </li>
</ul>

<p>The  Client Credentials grant type is the most appropriate for server-to-server applications, such as typical B2B interactions.</p>

:ET